# Makefile for Cortex-M3

# App name
APP_NAME = @OUT_NAME@

# Directories
SRC_DIR = @CMAKE_CURRENT_SOURCE_DIR@
BIN_DIR = @CMAKE_CURRENT_BINARY_DIR@/$(APP_NAME)

# Input Files
LD_SCRIPT = $(SRC_DIR)/$(APP_NAME).ld
STARTUP_S = $(SRC_DIR)/ht32f165x.s

CC_SRCS = \
	main.c \
	board/cpu/ht32f165x.c \
	usb/usb.c \
	usb/descriptors.c

# Output Files
OUT_ELF = $(BIN_DIR)/$(APP_NAME).elf
OUT_BIN = $(BIN_DIR)/$(APP_NAME).bin
OUT_MAP = $(BIN_DIR)/$(APP_NAME).map

# Intermediary files
STARTUP_OBJ = startup.o
OBJ_NAMES = $(CC_SRCS:.c=.o)
CC_OBJS = $(addprefix $(BIN_DIR)/, $(OBJ_NAMES))

# Config
ARM_CPU = cortex-m3

# Commands
CC = arm-none-eabi-gcc
AS = arm-none-eabi-as
LD = arm-none-eabi-ld
OC = arm-none-eabi-objcopy

RM = rm -f
MKDIR = mkdir -p

# Flags
CC_FLAGS += -c -mcpu=$(ARM_CPU) -mthumb -std=c11 -nostdlib -nostartfiles -ffreestanding -Wall
CC_FLAGS += -MT $@ -MMD -MP -MF $(BIN_DIR)/$*.Td
CC_FLAGS += -DFW_BUILDING @C_DEFS@

AS_FLAGS += -mcpu=$(ARM_CPU) -mthumb
LD_FLAGS += -nostdlib -nostartfiles -T $(LD_SCRIPT) -Map $(OUT_MAP)

# Targets

#FIX_DEPEND = mv -f $(BIN_DIR)/$*.Td $(BIN_DIR)/$*.d

all: $(OUT_BIN)

$(OUT_BIN): $(OUT_ELF)
	echo "BIN  $(notdir $@)"
	$(OC) $(OUT_ELF) -O binary $(OUT_BIN)

$(OUT_ELF): $(LD_SCRIPT) $(STARTUP_OBJ) | dirs $(CC_OBJS)
	echo "LINK $(notdir $@)"
	$(LD) $(LD_FLAGS) -o $@ $(STARTUP_OBJ) $(CC_OBJS)

$(STARTUP_OBJ): $(STARTUP_S)
	echo "AS   $(notdir $<)"
	$(AS) $(AS_FLAGS) -o $@ $<

$(BIN_DIR)/%.o: $(SRC_DIR)/%.c $(BIN_DIR)/%.d
	echo "CC   $(notdir $<)"
	echo "$(CC_FLAGS)"
	$(CC) $(CC_FLAGS) -o $@ $<
	#$(FIX_DEPEND)

dirs:
	$(MKDIR) $(BIN_DIR)
	$(MKDIR) $(BIN_DIR)/board/cpu
	$(MKDIR) $(BIN_DIR)/usb

clean:
	$(RM) $(OUT_ELF)
	$(RM) $(OUT_BIN)
	$(RM) $(OUT_MAP)
	$(RM) *.o
	$(RM) usb/*.o

.PHONY: all dirs clean
